#配置这个属性的意义在于，如果存在多个数据源，监控的时候可以通过名字来区分开来。
# 如果没有配置，将会生成一个名字，格式是："DataSource-" 
#+ System.identityHashCode(this). 另外配置此属性至少在1.0.5版本中是不起作用的，强行设置name会出错
dataSource.name=druid_mysql
#连接数据库的url，不同数据库不一样。例如：
#mysql : jdbc:mysql://10.20.153.104:3306/druid2 
#oracle : jdbc:oracle:thin:@10.20.149.85:1521:ocnauto
dataSource.url=jdbc:mysql://127.0.0.1:3306/test1
#	连接数据库的用户名
dataSource.username=root
#	连接数据库的密码。如果你不希望密码直接写在配置文件中，可以使用ConfigFilter
#详细看这里：https://github.com/alibaba/druid/wiki/%E4%BD%BF%E7%94%A8ConfigFilter
dataSource.password=root


#数据源驱动类可不写，Druid默认会自动根据URL识别driverClassName 
dataSource.driverClassName=
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时 默认值为0
dataSource.initialSize=1
#最小连接池数量
dataSource.minIdle=1
#最大连接池数量   默认8
dataSource.maxActive=20
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，
#并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
dataSource.maxWait=60000
#有两个含义：
# Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明 默认1分钟
dataSource.timeBetweenEvictionRunsMillis=60000
#连接保持空闲而不被驱逐的最长时间 默认30分钟
dataSource.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
dataSource.validationQuery=SELECT 'druid'
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。 默认true
dataSource.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 默认false
dataSource.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 默认false
dataSource.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。默认false
dataSource.poolPreparedStatements=true
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
dataSource.maxPoolPreparedStatementPerConnectionSize=100

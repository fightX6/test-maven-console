<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:web="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  
  <!-- 配置Log4j -->
    <context-param>
          <param-name>webAppRootKey</param-name>
          <param-value>test_maven_console.root</param-value>
    </context-param>
    <context-param>
          <param-name>log4jConfigLocation</param-name>
          <param-value>classpath:/cn/test/config/log4j.properties</param-value>
    </context-param>
    <listener>
          <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
    <!-- 配置编码过滤器 -->
    <filter>
          <filter-name>characterEncodingFilter</filter-name>
          <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
          <init-param>
                <param-name>encoding</param-name>
                <param-value>UTF-8</param-value>
          </init-param>
    </filter>
    <filter-mapping>
          <filter-name>characterEncodingFilter</filter-name>
          <url-pattern>/*</url-pattern>
    </filter-mapping>
     <!-- 配置Spring监听器 -->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:config/spring*.xml</param-value>
    </context-param>
    <!-- Spring 刷新Introspector防止内存泄露 -->
    <listener>
        <listener-class>
            org.springframework.web.util.IntrospectorCleanupListener
        </listener-class>
    </listener>
    
    <!-- SpringMVC核心分发器 -->
    <servlet> 
          <servlet-name>dispatcherServlet</servlet-name> 
          <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> 
          <init-param> 
                  <param-name>contextConfigLocation</param-name> 
                  <param-value>classpath:config/springMVC.xml</param-value> 
          </init-param> 
          <load-on-startup>1</load-on-startup> 
     </servlet> 
     <!-- 映射*.do的请求 -->
     <servlet-mapping> 
             <servlet-name>dispatcherServlet</servlet-name> 
             <url-pattern>/</url-pattern> 
     </servlet-mapping> 
     <!-- Druid的内置监控页面 -->
    <!-- Druid,监控数据库,以及WEB访问连接信息 -->  
<!-- WebStatFilter用于采集web-jdbc关联监控的数据。 -->  
<filter>  
    <filter-name>DruidWebStatFilter</filter-name>  
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <!-- 经常需要排除一些不必要的url，比如.js,/jslib/等等。配置在init-param中 -->  
    <init-param>  
        <param-name>exclusions</param-name>  
        <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.swf,/druid/*</param-value>  
    </init-param>  
    <!-- 缺省sessionStatMaxCount是1000个。你可以按需要进行配置 -->
    <init-param>  
        <param-name>sessionStatMaxCount</param-name>  
        <param-value>2000</param-value>  
    </init-param>
    <!-- 你可以关闭session统计功能  false 为关闭 -->  
    <init-param>  
        <param-name>sessionStatEnable</param-name>  
        <param-value>true</param-value>  
    </init-param>  
    <!-- 你可以配置principalSessionName，使得druid能够知道当前的session的用户是谁
    <init-param>  
        <param-name>principalSessionName</param-name>  
        <param-value>session_user_key</param-value>  
    </init-param>   -->
    <!-- 配置profileEnable能够监控单个url调用的sql列表 -->
    <init-param>  
        <param-name>profileEnable</param-name>  
        <param-value>true</param-value>  
    </init-param>  
</filter>  
<filter-mapping>  
    <filter-name>DruidWebStatFilter</filter-name>  
    <url-pattern>/*</url-pattern>  
</filter-mapping>  
<!-- 
	配置 Druid 监控信息显示页面

	配置监控页面访问密码,需要配置Servlet的 loginUsername 和 loginPassword这两个初始参数。
 -->  
<servlet>  
    <servlet-name>DruidStatView</servlet-name>  
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>  
    <init-param>  
        <!-- 允许清空统计数据 -->  
        <param-name>resetEnable</param-name>  
        <param-value>true</param-value>  
    </init-param>  
    <init-param>  
        <!-- 用户名 -->  
        <param-name>loginUsername</param-name>  
        <param-value>druid</param-value>  
    </init-param>  
    <init-param>  
        <!-- 密码 -->  
        <param-name>loginPassword</param-name>  
        <param-value>druid</param-value>  
    </init-param>  
</servlet>  
<servlet-mapping>  
    <servlet-name>DruidStatView</servlet-name>  
    <url-pattern>/druid/*</url-pattern>  
</servlet-mapping>  
</web-app>